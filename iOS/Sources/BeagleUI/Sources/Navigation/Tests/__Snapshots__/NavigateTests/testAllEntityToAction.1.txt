openDeepLink-withPath-withData ->
Navigate.openDeepLink(DeepLinkNavigation(path: "path", data: Optional(["data": ""]), component: nil))

openDeepLink-withPath-withData ->
Navigate.openDeepLink(DeepLinkNavigation(path: "path", data: Optional(["data": ""]), component: nil))

openDeepLink-withPath-noData ->
Navigate.openDeepLink(DeepLinkNavigation(path: "path", data: nil, component: nil))

openDeepLink-withPath-noData ->
Navigate.openDeepLink(DeepLinkNavigation(path: "path", data: nil, component: nil))

openDeepLink-noPath-withData ->
ERROR

openDeepLink-noPath-withData ->
ERROR

openDeepLink-noPath-noData ->
ERROR

openDeepLink-noPath-noData ->
ERROR

swapView-withPath-withData ->
Navigate.swapView(NewPath(path: "path", shouldPrefetch: true, fallback: nil))

swapView-withPath-withData ->
Navigate.swapView(NewPath(path: "path", shouldPrefetch: false, fallback: nil))

swapView-withPath-noData ->
Navigate.swapView(NewPath(path: "path", shouldPrefetch: true, fallback: nil))

swapView-withPath-noData ->
Navigate.swapView(NewPath(path: "path", shouldPrefetch: false, fallback: nil))

swapView-noPath-withData ->
ERROR

swapView-noPath-withData ->
ERROR

swapView-noPath-noData ->
ERROR

swapView-noPath-noData ->
ERROR

addView-withPath-withData ->
Navigate.addView(NewPath(path: "path", shouldPrefetch: true, fallback: nil))

addView-withPath-withData ->
Navigate.addView(NewPath(path: "path", shouldPrefetch: false, fallback: nil))

addView-withPath-noData ->
Navigate.addView(NewPath(path: "path", shouldPrefetch: true, fallback: nil))

addView-withPath-noData ->
Navigate.addView(NewPath(path: "path", shouldPrefetch: false, fallback: nil))

addView-noPath-withData ->
ERROR

addView-noPath-withData ->
ERROR

addView-noPath-noData ->
ERROR

addView-noPath-noData ->
ERROR

finishView-withPath-withData ->
Navigate.finishView

finishView-withPath-withData ->
Navigate.finishView

finishView-withPath-noData ->
Navigate.finishView

finishView-withPath-noData ->
Navigate.finishView

finishView-noPath-withData ->
Navigate.finishView

finishView-noPath-withData ->
Navigate.finishView

finishView-noPath-noData ->
Navigate.finishView

finishView-noPath-noData ->
Navigate.finishView

popView-withPath-withData ->
Navigate.popView

popView-withPath-withData ->
Navigate.popView

popView-withPath-noData ->
Navigate.popView

popView-withPath-noData ->
Navigate.popView

popView-noPath-withData ->
Navigate.popView

popView-noPath-withData ->
Navigate.popView

popView-noPath-noData ->
Navigate.popView

popView-noPath-noData ->
Navigate.popView

popToView-withPath-withData ->
Navigate.popToView(path)

popToView-withPath-withData ->
Navigate.popToView(path)

popToView-withPath-noData ->
Navigate.popToView(path)

popToView-withPath-noData ->
Navigate.popToView(path)

popToView-noPath-withData ->
ERROR

popToView-noPath-withData ->
ERROR

popToView-noPath-noData ->
ERROR

popToView-noPath-noData ->
ERROR

presentView-withPath-withData ->
Navigate.presentView(NewPath(path: "path", shouldPrefetch: true, fallback: nil))

presentView-withPath-withData ->
Navigate.presentView(NewPath(path: "path", shouldPrefetch: false, fallback: nil))

presentView-withPath-noData ->
Navigate.presentView(NewPath(path: "path", shouldPrefetch: true, fallback: nil))

presentView-withPath-noData ->
Navigate.presentView(NewPath(path: "path", shouldPrefetch: false, fallback: nil))

presentView-noPath-withData ->
ERROR

presentView-noPath-withData ->
ERROR

presentView-noPath-noData ->
ERROR

presentView-noPath-noData ->
ERROR

