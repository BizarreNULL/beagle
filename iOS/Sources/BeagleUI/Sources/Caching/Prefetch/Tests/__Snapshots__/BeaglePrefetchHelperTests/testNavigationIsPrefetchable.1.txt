  openDeepLink(BeagleUI.Navigate.DeepLinkNavigation(path: "path", data: nil, component: nil))  -->  NULL 

  openDeepLink(BeagleUI.Navigate.DeepLinkNavigation(path: "path", data: Optional(["data": "value"]), component: nil))  -->  NULL 

  openDeepLink(BeagleUI.Navigate.DeepLinkNavigation(path: "path", data: nil, component: Optional(BeagleUI.Container(children: [], id: nil, flex: nil, appearance: nil, accessibility: nil))))  -->  NULL 

  addView(BeagleUI.Navigate.NewPath(path: "path", shouldPrefetch: true, fallback: nil))  -->  NewPath(path: "path", shouldPrefetch: true, fallback: nil) 

  addView(BeagleUI.Navigate.NewPath(path: "path", shouldPrefetch: false, fallback: nil))  -->  NewPath(path: "path", shouldPrefetch: false, fallback: nil) 

  presentView(BeagleUI.Navigate.NewPath(path: "path", shouldPrefetch: true, fallback: nil))  -->  NewPath(path: "path", shouldPrefetch: true, fallback: nil) 

  presentView(BeagleUI.Navigate.NewPath(path: "path", shouldPrefetch: false, fallback: nil))  -->  NewPath(path: "path", shouldPrefetch: false, fallback: nil) 

  swapView(BeagleUI.Navigate.NewPath(path: "path", shouldPrefetch: true, fallback: nil))  -->  NewPath(path: "path", shouldPrefetch: true, fallback: nil) 

  swapView(BeagleUI.Navigate.NewPath(path: "path", shouldPrefetch: false, fallback: nil))  -->  NewPath(path: "path", shouldPrefetch: false, fallback: nil) 

  popView  -->  NULL 

  popToView("path")  -->  NULL 

  finishView  -->  NULL 

